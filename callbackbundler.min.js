/**
 * CallbackBundler
 * Copyright (c) by Yong Quan Lim
 * Distributed under MIT license: https://github.com/yqlim/CallbackBundler
 */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):t.CallbackBundler=e()}(this,function(){"use strict";function n(){!function(t,e){if(!(t instanceof n))throw new TypeError('CallbackBundler constructor must be called with the keyword "new".')}(this)}return function(t,e){var n,r;for(n in e)r=e[n],Object.defineProperty(t,n,r&&"object"==typeof r&&("get"in r||"set"in r)?r:{value:r,writable:!1,enumerable:!1,configurable:!1})}(n.prototype=Object.create(Array.prototype),{size:{get:function(){return this.length}},add:function(){var t,e;for(t=0,e=arguments.length;t<e;t++){if("function"!=typeof arguments[t])throw new TypeError("Argument["+t+"] is not type of function.");this.push(arguments[t])}},remove:function(){var t,e;for(t=0,e=arguments.length;t<e;t++){if("function"!=typeof arguments[t])throw new TypeError("Argument["+t+"] is not type of function.");this.splice(t,1)}},attach:function(t,e,n){var r,o,i;if("function"!=typeof(e=t[e]))throw new TypeError('"'+arguments[1]+'" is not a valid event listener attachment method of the object provided as arguments[0].');if("string"!=typeof n)throw new TypeError("Event type expects a string value.");for(e=e.bind(t,n),i=[],r=3,o=arguments.length;r<o;r++)i.push(arguments[r]);for(r=0,o=this.length;r<o;r++)e.apply(e,[this[r]].concat(i))},run:function(t,e){var n,r,o;if((e=e||[])&&e.constructor!==Array)throw new TypeError("Argument[1] must be an array.");for(n=0,r=this.length;n<r;n++)(o=e[n]||[])&&o.constructor!==Array&&(o=[o]),this[n].apply(t,o)}}),n});